import ProjectConfig._
import PipelineConfig._
import StoreHelpers._

final case class TablesData(
  variantsSummary: Store,
  clusters: Store,
  ancestry: Store,
  sampleQc: Store)

final case class TexData(
  header: Store,
  intro: Store,
  data: Store,
  ancestry: Store,
  ibdSexcheck: Store,
  sampleQc: Store,
  variantQc: Store,
  bibliography: Store)

final case class FigureData(
  samplesUpsetPlotPdf: Store,
  variantsUpsetPlotPdf: Store,
  metricDistUnadjPdf: Store,
  metricDistAdjPdf: Store,
  samplesRemainingUpsetPlotPdf: Store,
  variantsRemainingUpsetPlotPdf: Store)

final case class QcReport(
  tablesData: TablesData,
  texData: TexData,
  figureData: FigureData,
  tex: Store,
  pdf: Store)

val qcReportStores = QcReport(

  tablesData = TablesData(
    variantsSummary = store(localOutDir / s"${projectConfig.projectId}.qcreport.variants.summary.tbl"),
    clusters = store(localOutDir / s"${projectConfig.projectId}.qcreport.clusters.tbl"),
    ancestry = store(localOutDir / s"${projectConfig.projectId}.qcreport.ancestry.tbl"),
    sampleQc = store(localOutDir / s"${projectConfig.projectId}.qcreport.sampleqc.tbl")),

  texData = TexData(
    header = store(localOutDir / s"${projectConfig.projectId}.qcreport.header.tex"),
    intro = store(localOutDir / s"${projectConfig.projectId}.qcreport.intro.tex"),
    data = store(localOutDir / s"${projectConfig.projectId}.qcreport.data.tex"),
    ancestry = store(localOutDir / s"${projectConfig.projectId}.qcreport.ancestry.tex"),
    ibdSexcheck = store(localOutDir / s"${projectConfig.projectId}.qcreport.ibd_sexcheck.tex"),
    sampleQc = store(localOutDir / s"${projectConfig.projectId}.qcreport.sampleqc.tex"),
    variantQc = store(localOutDir / s"${projectConfig.projectId}.qcreport.variantqc.tex"),
    bibliography = store(localOutDir / s"${projectConfig.projectId}.qcreport.bibliography.tex")),

  figureData = FigureData(
    samplesUpsetPlotPdf = store(localOutDir / s"${projectConfig.projectId}.qcreport.samples.upsetplot.pdf"),
    variantsUpsetPlotPdf = store(localOutDir / s"${projectConfig.projectId}.qcreport.variants.upsetplot.pdf"),
    metricDistUnadjPdf = store(localOutDir / s"${projectConfig.projectId}.qcreport.metric_dist_unadj.pdf"),
    metricDistAdjPdf = store(localOutDir / s"${projectConfig.projectId}.qcreport.metric_dist_adj.pdf"),
    samplesRemainingUpsetPlotPdf = store(localOutDir / s"${projectConfig.projectId}.qcreport.samples_remaining.upsetplot.pdf"),
    variantsRemainingUpsetPlotPdf = store(localOutDir / s"${projectConfig.projectId}.qcreport.variants_remaining.upsetplot.pdf")),

  tex = store(localOutDir / s"${projectConfig.projectId}.qcreport.tex"),
  pdf = store(localOutDir / s"${projectConfig.projectId}.qcreport.pdf")

)
