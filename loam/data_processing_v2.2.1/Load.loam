/**
  * Load Step
  *  Description: Generate the Hail matrix table from VCF file
  *  Requires: Hail v0.2
  */
import ProjectConfig._
import PipelineConfig._
import ArrayStores._

def Load(array: String): Unit = {

  hailCloud match {

    case true =>

      local {
      
        googleCopy(arrayStores(array).harmonizedData.vcf, arrayStores(array).harmonizedData.vcfGoogle.get)
        googleCopy(arrayStores(array).harmonizedData.tbi, arrayStores(array).harmonizedData.tbiGoogle.get)
      
      }
      
      google {
      
        hail"""$pyHailLoad --
          --reference-genome ${projectConfig.referenceGenome}
          --partitions ${projectConfig.Arrays.filter(_.id == array)(0).partitions.toString}
          --vcf-in ${projectConfig.projectId} ${arrayStores(array).harmonizedData.vcfGoogle.get}
          --mt-out ${arrayStores(array).harmonizedData.mtGoogle.get}"""
          .in(arrayStores(array).harmonizedData.vcfGoogle.get, arrayStores(array).harmonizedData.tbiGoogle.get)
          .out(arrayStores(array).harmonizedData.mtGoogle.get)
          .tag(s"${arrayStores(array).harmonizedData.mt.get}.google".split("/").last)
      
      }

    case false =>

      drmWith(imageName = s"$imgHail", cores=4, mem=2) {

        cmd"""$binPython $pyHailLoad
          --reference-genome ${projectConfig.referenceGenome}
          --partitions ${projectConfig.Arrays.filter(_.id == array)(0).partitions.toString}
          --vcf-in ${projectConfig.projectId} ${arrayStores(array).harmonizedData.vcf}
          --mt-out ${arrayStores(array).harmonizedData.mt.get}"""
          .in(arrayStores(array).harmonizedData.vcf, arrayStores(array).harmonizedData.tbi)
          .out(arrayStores(array).harmonizedData.mt.get)
          .tag(s"${arrayStores(array).harmonizedData.mt.get}".split("/").last)

      }

  }

}
