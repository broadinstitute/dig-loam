/**
  * Load Step
  *  Description: Generate the Hail matrix table from VCF file
  *  Requires: Hail v0.2
  */
import ProjectConfig._
import PipelineConfig._
import ArrayStores._

def Load(array: String): Unit = {

  local {
  
    googleCopy(arrayStores(array).harmonizedData.vcf, arrayStores(array).harmonizedData.vcfGoogle)
    googleCopy(arrayStores(array).harmonizedData.tbi, arrayStores(array).harmonizedData.tbiGoogle)
  
  }
  
  google {

    hail"""$pyHailLoad --
      --reference-genome ${projectConfig.referenceGenome}
      --partitions ${projectConfig.Arrays.filter(_.id == array)(0).partitions.toString}
      --vcf-in ${projectConfig.projectId} ${arrayStores(array).harmonizedData.vcfGoogle}
      --mt-out ${arrayStores(array).harmonizedData.mtGoogle}"""
      .in(arrayStores(array).harmonizedData.vcfGoogle, arrayStores(array).harmonizedData.tbiGoogle)
      .out(arrayStores(array).harmonizedData.mtGoogle)
      .tag(s"${arrayStores(array).harmonizedData.vcf}.pyHailLoad.google".split("/").last)
  
  }

}

def LoadImputed(array: String, imp: String): Unit = {

  local {
  
    googleCopy(arrayStores(array).imputedData(imp).data, arrayStores(array).imputedData(imp).dataGoogle)

  }
  
  google {
  
    hail"""$pyHailLoad --
      --reference-genome ${projectConfig.referenceGenome}
      --partitions ${projectConfig.Arrays.filter(_.id == array)(0).partitions.toString}
      --info-in ${arrayStores(array).imputedData(imp).infoGoogle}
      --vcf-in ${projectConfig.projectId} ${arrayStores(array).imputedData(imp).dataGoogle}
      --mt-out ${arrayStores(array).imputedData(imp).mtGoogle}"""
      .in(arrayStores(array).imputedData(imp).dataGoogle, arrayStores(array).imputedData(imp).infoGoogle)
      .out(arrayStores(array).imputedData(imp).mtGoogle)
      .tag(s"${arrayStores(array).imputedData(imp).base}.pyHailLoad.google".split("/").last)
  
  }

}
