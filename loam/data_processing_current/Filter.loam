/**
 * Filter Step
 *  Description: Generate filtered and filtered/pruned filesets for QC
 *  Requires: Hail
 */
import ProjectConfig._
import PipelineConfig._
import ArrayStores._
import InputStores._

def Filter(array: String): Unit = {

  google {
  
    hail"""$pyHailFilter
      --vds-in ${arrayStores(array).harmonizedData.vdsGoogle}
      --regions-exclude ${InputStores.regionsExcludeGoogle}
      --variant-qc-out ${arrayStores(array).harmonizedData.variantQcGoogle}
      --variants-prunedin-out ${arrayStores(array).filteredData.prunedInGoogle}
      --filt-pruned-vds-out ${arrayStores(array).filteredData.vdsGoogle}
      --filt-pruned-plink-out ${arrayStores(array).filteredData.dataGoogle}"""
      .in(arrayStores(array).harmonizedData.vdsGoogle, InputStores.regionsExcludeGoogle)
      .out(arrayStores(array).filteredData.dataGoogle :+ arrayStores(array).filteredData.vdsGoogle :+ arrayStores(array).harmonizedData.variantQcGoogle :+ arrayStores(array).filteredData.prunedInGoogle)
      .named(s"${arrayStores(array).harmonizedData.vcf}.pyHailFilter.google".split("/").last)
  
  }
  
  local {
  
    googleCopy(arrayStores(array).filteredData.dataGoogle, arrayStores(array).filteredData.data)
  
  }

}
