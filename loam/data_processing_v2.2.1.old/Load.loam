/**
  * Load Step
  *  Description: Generate the Hail VDS from VCF file
  *  Requires: Hail
  */
import ProjectConfig._
import PipelineConfig._
import ArrayStores._

def Load(array: String): Unit = {

  hailCloud match {

    case true =>

      local {
      
        googleCopy(arrayStores(array).harmonizedData.vcf, arrayStores(array).harmonizedData.vcfGoogle)
        googleCopy(arrayStores(array).harmonizedData.tbi, arrayStores(array).harmonizedData.tbiGoogle)
      
      }
      
      google {
      
        hail"""$pyHailLoad --
          --vcf-in ${projectConfig.projectId} ${arrayStores(array).harmonizedData.vcfGoogle}
          --partitions ${projectConfig.Arrays.filter(_.id == array)(0).partitions.toString}
          --vds-out ${arrayStores(array).harmonizedData.vdsGoogle}"""
          .in(arrayStores(array).harmonizedData.vcfGoogle, arrayStores(array).harmonizedData.tbiGoogle)
          .out(arrayStores(array).harmonizedData.vdsGoogle)
          .tag(s"${arrayStores(array).harmonizedData.vcf}.pyHailLoad.google".split("/").last)
      
      }

    case false =>

      drmWith(imageName = s"$imgHailv01", cores=4, mem=2) {

        cmd"""$binHail $pyHailLoad
          --vcf-in ${projectConfig.projectId} ${arrayStores(array).harmonizedData.vcf}
          --partitions ${projectConfig.Arrays.filter(_.id == array)(0).partitions.toString}
          --vds-out ${arrayStores(array).harmonizedData.vds}"""
          .in(arrayStores(array).harmonizedData.vcf, arrayStores(array).harmonizedData.tbi)
          .out(arrayStores(array).harmonizedData.vds)
          .tag(s"${arrayStores(array).harmonizedData.vcf}.pyHailLoad".split("/").last)

      }

  }

}
