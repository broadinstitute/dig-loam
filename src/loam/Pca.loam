/**
 * PCA Step
 *  Description: Calculate PCs for all non-outlier samples combined (to be used for adjustment during sample outlier removal)
 *  Requires: R
 */
import ProjectConfig._
import ArrayStores._
import ProjectStores._

def Pca(array: ConfigArray): Unit = {

  drmWith(imageName = s"${utils.image.imgR34}", cores = projectConfig.resources.pca.cpus, mem = projectConfig.resources.pca.mem, maxRunTime = projectConfig.resources.pca.maxRunTime) {
  
    cmd"""${utils.binary.binRscript} --vanilla --verbose
      ${utils.r.rPcair}
      --cpus ${projectConfig.resources.pca.cpus}
      --plink-in ${arrayStores(array).prunedData.plink.base}
      --gds-out ${arrayStores(array).pcaData.gds}
      --exclude ${ProjectStores.ancestryOutliers}
      --ancestry ${ProjectStores.ancestryInferred}
      --id ${projectConfig.projectId}
      --scores ${arrayStores(array).pcaData.scores}
      > ${arrayStores(array).pcaData.log}"""
      .in(arrayStores(array).prunedData.plink.data :+ ProjectStores.ancestryInferred :+ ProjectStores.ancestryOutliers)
      .out(arrayStores(array).pcaData.gds, arrayStores(array).pcaData.log, arrayStores(array).pcaData.scores)
      .tag(s"${arrayStores(array).pcaData.scores}".split("/").last)

  }

}
