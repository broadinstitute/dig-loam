val softDir = path("/home/clint/bin")

val shapeit = softDir / "shapeit"
val impute2 = softDir / "impute2"

val start = "20.4e6"
val end = "20.5e6"

val homeDir = path("/home/clint")
val dataDir = homeDir / "workspace/imputation"
val shapeitDataDir = dataDir / "shapeit_example"
val impute2DataDir = dataDir / "impute2_example"

val outputDir = path("target")

val data = store[VCF].from(shapeitDataDir / "gwas.vcf.gz")
val geneticMap = store[TXT].from(shapeitDataDir / "genetic_map.txt.gz")
val phasedHaps = store[TXT].to(outputDir / "phased.haps.gz")
val phasedSamples = store[TXT].to(outputDir / "phased.samples.gz")
val log = store[TXT].to(outputDir / "shapeit.log")

cmd"$shapeit -V $data -M $geneticMap -O $phasedHaps $phasedSamples -L $log --thread 8"

val mapFile = store[TXT].from(impute2DataDir / "example.chr22.map")
val legend = store[TXT].from(impute2DataDir / "example.chr22.1kG.legend.gz")
val knownHaps = store[TXT].from(impute2DataDir / "example.chr22.prephasing.impute2_haps.gz")
val imputed = store[TXT].to(outputDir / "imputed.data.gen")

cmd"""$impute2 -use_prephased_g -m $mapFile -h $phasedHaps -l $legend 
-known_haps_g $knownHaps -int $start $end -Ne 20000 -o $imputed -verbose -o_gz
"""
