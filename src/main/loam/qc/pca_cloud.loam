import camp_cloud._
import binaries._
import binaries_cloud._

val m_base = store[TXT].from(base)
val m_phenotypes = store[TXT].from(phenotypes)
val m_interval_list = store[TXT].from(interval_list)
val m_vds = store[TXT].to(vds)
val m_pca_tsv = store[TXT].to(pca_tsv)
val m_pca_tsv_local = store[TXT].to(pca_tsv_local)

val cluster_created = store[Nothing]
val all_done = store[Nothing]

val m_cluster = "minimal"

// Create a Google Cloud DataProc cluster
cmd"""gcloud dataproc clusters create $m_cluster
      --zone us-central1-f
      --master-machine-type n1-standard-1
      --master-boot-disk-size 20
      --num-workers 2
      --worker-machine-type n1-standard-1
      --worker-boot-disk-size 20
      --image-version 1.0
      --scopes 'https://www.googleapis.com/auth/cloud-platform'
      --project broadinstitute.com:cmi-gce-01""".out(cluster_created)

// Import input Plink files into Hail's VDS format
cmd"""gcloud dataproc jobs submit spark
        --cluster $m_cluster
        --jar $hail_jar_cloud
        --class org.broadinstitute.hail.driver.Main
            importplink
            --bfile $m_base
            splitmulti
            annotatesamples table
            --root sa.pheno
            -e IID
            -i $m_phenotypes
            -t "IID: String, T2D_HEALTH_PROVIDER: Int, AGE_T2D_HEALTH_PROVIDER: Double, SEX: Int, SuperPopulation: String, RACE: String"
            --missing "NA"
            write
            --overwrite
            -o $m_vds
            count
            -g""".in(cluster_created)

// Calculate PCs based on the VDS
cmd"""gcloud dataproc jobs submit spark
        --cluster $m_cluster
        --jar $hail_jar_cloud
        --class org.broadinstitute.hail.driver.Main
            read -i $m_vds
            filtervariants intervals
            --keep -i $m_interval_list
            pca --scores sa.pca
            exportsamples -c 'Sample = s, SuperPopulation = sa.pheno.SuperPopulation, Population = sa.pheno.RACE, PC1 = sa.pca.PC1, PC2 = sa.pca.PC2, PC3 = sa.pca.PC3, PC4 = sa.pca.PC4, PC5 = sa.pca.PC5, PC6 = sa.pca.PC6, PC7 = sa.pca.PC7, PC8 = sa.pca.PC8, PC9 = sa.pca.PC9, PC10 = sa.pca.PC10'
            -o $m_pca_tsv"""

// Download PCA results
cmd"""gsutil cp $m_pca_tsv $m_pca_tsv_local""".out(all_done)

// Locally plot PCA results
cmd"""$R --vanilla --args $m_pca_tsv_local < $plot_pcs_local"""

// Delete the DataProc cluster
cmd"""gcloud dataproc clusters delete $m_cluster""".in(all_done)

