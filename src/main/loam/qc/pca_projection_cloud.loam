import camp_cloud._
import binaries._
import binaries_cloud._

val m_base                  = store[TXT].from(base)
val m_phenotypes            = store[TXT].from(phenotypes)
val m_sample                = store[TXT].from(sample)
val m_kg_sample             = store[TXT].from(kg_sample)
val m_interval_list         = store[TXT].from(interval_list)
val m_pca_tsv               = store[TXT].to(pca_tsv)
val m_pca_tsv_local         = store[TXT].to(pca_tsv_local)
val m_pca_scores_tsv        = store[TXT].to(pca_scores_tsv)
val m_pca_scores_tsv_local  = store[TXT].to(pca_scores_tsv_local)

val m_vds                   = store[TXT].to(vds)
val m_kg_vds                = store[TXT].to(kg_vds)
val m_kg_allele_freq        = store[TXT].to(kg_allele_freq)
val m_kg_pca_scores         = store[TXT].to(kg_pca_scores)
val m_kg_pca_loadings       = store[TXT].to(kg_pca_loadings)
val m_kg_pca_loadings_log   = store[TXT].to(kg_pca_loadings_log)

val m_cluster = "minimal"

// Step 1/5: Import input Plink files in Hail's VDS format
cmd"""gcloud dataproc jobs submit spark
        --cluster $m_cluster
        --jar $hail_jar_cloud
        --class org.broadinstitute.hail.driver.Main
            importplink
            --bfile $m_base
            splitmulti
            annotatesamples table
            --root sa.pheno
            -e IID
            -i $m_sample
            -t "IID: String, POP: String, SUPERPOP: String, SEX: Int"
            --missing "NA"
            --delimiter " "
            write
            --overwrite
            -o $m_vds
            count
            -g"""

// Step 2/5: Import input phased Plink files in Hail's VDS format
cmd"""gcloud dataproc jobs submit spark
        --cluster $m_cluster
        --jar $hail_jar_cloud
        --class org.broadinstitute.hail.driver.Main
            importplink
            --bfile $m_base
            splitmulti
            annotatesamples table
            --root sa.pheno
            -e IID
            -i $m_kg_sample
            -t "IID: String, POP: String, SUPERPOP: String, SEX: Int"
            --missing "NA"
            --delimiter " "
            write
            --overwrite
            -o $m_kg_vds
            count
            -g"""

// Step 3/5: Calculate PCs for 1kg VDS
cmd"""gcloud dataproc jobs submit spark
        --cluster $m_cluster
        --jar $hail_jar_cloud
        --class org.broadinstitute.hail.driver.Main
            -l $m_kg_pca_loadings_log
            read -i $m_kg_vds
            variantqc
            exportvariants -c 'Variant = v, refPanelAF = va.qc.AF'
            -o $m_kg_allele_freq
            pca -k 3
            --scores sa.pca.scores
            --eigenvalues global.pca.evals
            --loadings va.pca.loadings
            exportsamples -c 'IID = sa.pheno.IID, SUPERPOP = sa.pheno.SUPERPOP, PC1 = sa.pca.scores.PC1, PC2 = sa.pca.scores.PC2, PC3 = sa.pca.scores.PC3'
            -o $m_kg_pca_scores
            exportvariants -c 'ID = v, PC1 = va.pca.loadings.PC1, PC2 = va.pca.loadings.PC2, PC3 = va.pca.loadings.PC3'
            -o m_kg_pca_loadings"""

// Step 4/5: Impute CAMP scores based on 1kg
cmd"""gcloud dataproc jobs submit spark
        --cluster $m_cluster
        --jar $hail_jar_cloud
        --class org.broadinstitute.hail.driver.Main
            read -i $m_vds \
            variantqc \
            annotatevariants table $m_kg_allele_freq \
            -e Variant \
            -c 'va.refPanelAF = table.refPanelAF' \
            --impute \
            annotatevariants table $m_kg_pca_loadings \
            -e 'ID' \
            -c 'va = merge(va, select(table, PC1, PC2, PC3))' \
            --impute \
            annotatevariants expr -c 'va.PCs = [va.PC1, va.PC2, va.PC3]' \
            annotatesamples expr -c 'sa.PCs = gs.map(g => let p = va.refPanelAF in if (p == 0 || p == 1) [0.0, 0.0, 0.0] else (g.gt - 2 * p) / sqrt(2 * p * (1 - p)) * va.PCs).sum()' \
            exportsamples -c 'IID = sa.pheno.IID, SUPERPOP = sa.pheno.SUPERPOP, PC1 = sa.PCs[0], PC2 = sa.PCs[1], PC3 = sa.PCs[2]' \
            -o $m_pca_scores_tsv"""

// Step 5/5: Download and locally plot results
cmd"""gsutil cp $m_pca_scores_tsv $m_pca_scores_tsv_local"""
cmd"""$R --vanilla --args $m_pca_scores_tsv_local < $plot_pcs_local"""

