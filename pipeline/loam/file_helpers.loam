import scala.io.Source
import loamstream.util.LoamFileUtils

private[this] val spacesRegex: scala.util.matching.Regex = "\\s+".r
  
private[this] def withLinesFrom[A](path: Path)(f: Iterator[String] => A): A = {
  withFile(path) { source =>
    f(source.getLines)
  }
}
  
def withFile[A](path: Path)(f: Source => A): A = {
  LoamFileUtils.enclosed(Source.fromFile(path.toFile))(f)
}

def firstLineFrom(file: Path): String = {
  withLinesFrom(file) { lines => 
    lines.next().trim 
  }
}
  
def allLinesFrom(file: Path): IndexedSeq[String] = {
  withLinesFrom(file) { lines =>
    lines.toIndexedSeq
  }
}
  
def headersFrom(file: Path): IndexedSeq[String] = {
  firstLineFrom(file).split(spacesRegex.toString)
}
  
def countDelimitersIn(file: Path): Int = spacesRegex.findAllIn(firstLineFrom(file)).size
  
def countColumnsIn(file: Path): Int = countDelimitersIn(file) + 1